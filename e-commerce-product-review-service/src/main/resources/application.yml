com:
  ecommerce:
    topics:
      create-entity-topic:
        in: create-review-in
        out: create-review-out

server:
  port: 7003
  error.include-message: always

app.eureka-server: localhost

eureka:
  client:
    serviceUrl:
      defaultZone: http://${app.eureka-server}:8761/eureka/
    initialInstanceInfoReplicationIntervalSeconds: 5
    registryFetchIntervalSeconds: 5
  instance:
    leaseRenewalIntervalInSeconds: 5
    leaseExpirationDurationInSeconds: 5

spring:
  application:
    name: review-service
  data:
    mongodb:
      host: localhost
      port: 27017
      database: review-db
  kafka:
    bootstrap-servers: localhost:9092
    streams:
      bootstrap-servers: localhost:9092
      application-id: "review-stream-id"

logging:
  level:
    root: INFO
    se.magnus: DEBUG
    org.springframework.data.mongodb.core.MongoTemplate: DEBUG

---

spring.config.activate.on-profile: docker
server:
  port: 8080

app.eureka-server: eureka

spring:
  data:
    mongodb:
      host: mongodb  # Docker container name for MongoDB
      port: 27017
      database: review-db

  rabbitmq:
    host: rabbitmq  # Docker container name for RabbitMQ

  cloud:
    stream:
      kafka:
        binder:
          brokers: kafka:29092  # Docker-internal Kafka communication

  kafka:
    bootstrap-servers: kafka:29092  # Connect to Kafka using the internal Docker port

---

spring.config.activate.on-profile: kafka

spring:
  kafka:
    bootstrap-servers: kafka:9092  # Kafka container name for Docker environment
    properties:
      reconnect.backoff.ms: 500
      retry.backoff.ms: 500
    producer:
      retries: 2
      request-timeout-ms: 2000
      max-block-ms: 3000
    consumer:
      max-poll-interval-ms: 15000
      session-timeout-ms: 10000

  