services:

  product:
    image: e-commerce-product-service
    mem_limit: 512m
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - ecommerce-network

  recommendation:
    image: e-commerce-recommendation-service
    mem_limit: 512m
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - ecommerce-network

  review:
    image: e-commerce-review-service
    mem_limit: 512m
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - ecommerce-network

  product-composite:
    image: e-commerce-product-composite-service
    mem_limit: 512m
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - ecommerce-network

  eureka:
    image: e-commerce-discovery-service
    mem_limit: 512m
    ports:
      - "8761:8761"

  mongodb:
#    image: mongo:6.0.4
    image: mongo:7.0.16
    container_name: mongodb
    mem_limit: 512m
    ports:
      - "27017:27017"
    command: mongod
    healthcheck:
#      test: "mongostat -n 1"
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 2s
      retries: 60
    networks:
      - ecommerce-network
    volumes:
      - ./dockerdata_new/db:/data/db

  kafka:
    image: confluentinc/cp-kafka:7.3.1
    container_name: kafka
    restart: always
    mem_limit: 1024m
    ports:
      - "9092:9092"  # Expose for host access
      - "29092:29092"  # Internal Docker network access
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,DOCKER:PLAINTEXT
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092,DOCKER://0.0.0.0:29092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092,DOCKER://kafka:29092
      - KAFKA_INTER_BROKER_LISTENER_NAME=DOCKER
      - KAFKA_BROKER_ID=1
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
     #- KAFKA_CREATE_TOPICS="topic1-partitions-replicas, topic2-partitions-replicas"
     #- KAFKA_AUTO_CREATE_TOPICS_ENABLE="false"
    depends_on:
      - zookeeper
    networks:
      - ecommerce-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.1
    container_name: zookeeper
    restart: always
    mem_limit: 512m
    ports:
      - "2181:2181"
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
    networks:
      - ecommerce-network

networks:
  ecommerce-network:
